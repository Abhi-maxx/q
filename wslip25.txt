Slip 25 
 
Q1) 
 
<!DOCTYPE html> 
<html> 
 
<head> 
    <style> 
        Body { 
            Font-family: Arial, sans-serif; 
            Font-size: 14px; 
            Color: #333; 
        } 
 
        H2 { 
            Color: #4682B4; 
            Font-size: 20px; 
            Font-weight: bold; 
        } 
 
        .form-container { 
            Background-color: #f9f9f9; 
            Padding: 20px; 
            Border-radius: 5px; 
            Width: 500px; 
            Margin: 0 auto; 
        } 
 
        Input[type=”text”], 
        Input[type=”password”] { 
            Width: 100%; 
            Padding: 10px; 
            Margin: 5px 0 10px; 
            Border: 1px solid #ddd; 
            Border-radius: 3px; 
        } 
 
        Label { 
            Display: block; 
            Margin-bottom: 5px; 
        } 
 
        .form-container input[type=”submit”] { 
            Background-color: #4CAF50; 
            Color: white; 
            Padding: 10px 20px; 
            Margin: 10px 0; 
            Border: none; 
            Border-radius: 3px; 
            Cursor: pointer; 
            Width: 100%; 
        } 
 
        .form-container input[type=”submit”]:hover { 
            Background-color: #45a049; 
        } 
    </style> 
</head> 
 
<body> 
    <div class=”form-container”> 
        <h2>Entry Form</h2> 
        <form action=”/submit_form” method=”post”> 
            <label for=”fname”>Name:</label> 
            <input type=”text” id=”fname” name=”fname” required> 
 
            <label for=”age”>Age:</label> 
            <input type=”text” id=”age” name=”age” required> 
 
            <label for=”address”>Address:</label> 
            <input type=”text” id=”address” name=”address” required> 
 
            <label for=”sex”>Sex:</label> 
            <input type=”text” id=”sex” name=”sex” required> 
 
            <label for=”nationality”>Nationality:</label> 
            <input type=”text” id=”nationality” name=”nationality” required> 
 
            <label for=”pwd”>Password:</label> 
            <input type=”password” id=”pwd” name=”pwd” required> 
 
            <input type=”submit” value=”Submit”> 
</form> 
</div> 
</body> 
</html> 
Q2) 
// Create Departments 
CREATE (:Department {name: ‘Physics’}) 
CREATE (:Department {name: ‘Geography’}) 
CREATE (:Department {name: ‘Computer’}) 
// Add more departments as needed 
// Create Courses 
CREATE (:Course {name: ‘Physics 101’}) 
CREATE (:Course {name: ‘Geography 202’}) 
CREATE (:Course {name: ‘Computer Science 301’}) 
// Add more courses as needed 
// Create Relationships 
MATCH (physicsDept:Department {name: ‘Physics’}), (physicsCourse:Course {name: 
‘Physics 101’}) 
CREATE (physicsDept)-[:OFFERS]->(physicsCourse) 
MATCH (geoDept:Department {name: ‘Geography’}), (geoCourse:Course {name: 
‘Geography 202’}) 
CREATE (geoDept)-[:OFFERS]->(geoCourse) 
// Add more relationships as needed 
// Create Recommendations 
CREATE (:Person {name: ‘John’})-[:RECOMMENDS]->(:Course {name: ‘Geography 202’}) 
CREATE (:Person {name: ‘Alice’})-[:RECOMMENDS]->(:Course {name: ‘Computer 
Science 301’}) 
// Add more recommendations as needed 
a. List the details of all the departments in the university. 
MATCH (d:Department) 
RETURN d; 
b. List the names of the courses provided by the Physics department. 
MATCH (:Department {name: ‘Physics’})-[:OFFERS]->(course:Course) 
RETURN course.name; 
c. List the most recommended course in the Geography department. 
MATCH (:Department {name: ‘Geography’})-[:OFFERS]->(course:Course)<
[:RECOMMENDS]-(person:Person) 
RETURN course.name, COUNT(person) AS recommendations 
ORDER BY recommendations DESC 
LIMIT 1; 
d. List the names of common courses across Mathematics and Computer 
department. 
MATCH (mathDept:Department {name: ‘Mathematics’})-[:OFFERS]
>(mathCourse:Course), 
(compDept:Department {name: ‘Computer’})-[:OFFERS]->(compCourse:Course) 
WHERE mathCourse.name = compCourse.name 
RETURN mathCourse.name;